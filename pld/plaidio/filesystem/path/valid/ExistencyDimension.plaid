/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SR-1121
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	"Existency" state region of "Valid" typestate.
	FILE:	ExistencyDimension.plaid
**/
package plaidio.filesystem.path.valid;

import plaidio.filesystem.path.valid.existency.Existent;
import plaidio.filesystem.path.valid.existency.NonExistent;

/*------------------------------------------------------------------------------
/**
	CID:	TS-1121
	DESC:	"ExistencyDimension" typestate which is one dimension of Valid typestate.
**/
state ExistencyDimension
{
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-11211
		DESC:	Checks all dimensions of the object.				
	**/
	method void stabilizeExistencyDimension() /*[shared ExistencyDimension >> shared ExistencyDimension this]*/
	{
		checkExistency();
	}
	//method void stabilizeExistencyDimension() /*[shared ExistencyDimension >> shared ExistencyDimension this]*/

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-11212
		DESC:	Checks whether the path exists or not, and within ExistencyDimension,
				changes the state of "this" into either "Existent" or "NonExistent".
	**/
	method void checkExistency() /*[shared ExistencyDimension >> shared ExistencyDimension this]*/
	{
		ifElse (j_File.exists())
		{
			this <- Existent;
			stabilizeExistent();
		}
		//else
		{
			this <- NonExistent;
			stabilizeNonExistent();
		}
	}
	//method void checkExistency() /*[shared ExistencyDimension >> shared ExistencyDimension this]*/
}