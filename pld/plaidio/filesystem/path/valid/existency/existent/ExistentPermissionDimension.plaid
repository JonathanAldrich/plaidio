/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

//------------------------------------------------------------------------------
/**
	CID:	SS-1
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	"plaidio.filesystem" is the basic statespace for SR-11 features
			Basic typestate for SR-11 features.
	FILE:	PermissionDimension.plaid
**/
package plaidio.filesystem;

import plaidio.filesystem.permission.ExecutabilityDimension;
import plaidio.filesystem.permission.ReadabilityDimension;
import plaidio.filesystem.permission.WritabilityDimension;

//------------------------------------------------------------------------------
/**
	CID:	TS-12
	DESC:	"ExistentPermissionDimension" state region of "Existent" typestate.
**/
state ExistentPermissionDimension = ExecutabilityDimension with ReadabilityDimension with WritabilityDimension with
{
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-121
		DESC:	Checks all dimensions of the object.				
	**/
	method void stabilizeExistentPermissionDimension() /*[shared ExistentPermissionDimension >> shared ExistentPermissionDimension this]*/
	{
		stabilizeExecutabilityDimension();
		stabilizeReadabilityDimension();
		stabilizeWritabilityDimension();
	}
	//method void stabilizeExistentPermissionDimension() /*[shared ExistentPermissionDimension >> shared ExistentPermissionDimension this]*/
}