/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SR-1121111
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	"Type" subtypes of "Type" typestate.
	FILE:	Leaf.plaid
**/
package plaidio.filesystem.path.valid.existency.existent.pathtype;

import plaidio.filesystem.path.valid.existency.existent.PathTypeDimension;
import plaidio.filesystem.path.valid.existency.existent.pathtype.leaftype.File;
import plaidio.filesystem.path.valid.existency.existent.pathtype.leaftype.Folder;
import plaidio.filesystem.path.valid.existency.existent.pathtype.leaftype.UnknownLeaf;

/*------------------------------------------------------------------------------
/**
	CID:	TS-1121111
	DESC:	"Leaf" typestate which contains an existent leaf path.
**/
state Leaf case of PathTypeDimension
{
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-11211111
		DESC:	Checks all dimensions of the object.				
	**/
	method void stabilizeLeaf() /*[shared Leaf >> shared Leaf this]*/
	{
		checkLeafType();
	}
	//method void stabilizeLeaf() /*[shared Leaf >> shared Leaf this]*/

	//-----------------------------------------------------------------------------
	/**
		CID:	ST-11211112
		DESC:	Checks whether the existent path is a root or not, and
				changes the state of "this" into either "Root" or "Leaf".				
	**/
	method void checkLeafType() /*[shared Leaf >> shared Leaf this]*/
	{
		ifElse (j_File.isFile())
		{
			this <- File;
			stabilizeFile();
		}
		/*else*/
		{
			ifElse (j_File.isDirectory())
			{
				this <- Folder;
				stabilizeFolder();
			}
			/*else*/
			{
				this <- UnknownLeaf;
				stabilizeUnknownLeaf();
			}
		}
	}
	//method void checkLeafType() /*[shared Leaf >> shared Leaf this]*/
}