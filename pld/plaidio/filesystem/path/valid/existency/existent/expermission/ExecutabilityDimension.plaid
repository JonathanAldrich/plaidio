/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SR-1121111
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	"ExPermission" state region of "Existent" typestate.
	FILE:	ExecutabilityDimension.plaid
**/
package plaidio.filesystem.path.valid.existency.existent.expermission;

import plaidio.filesystem.path.valid.existency.existent.expermission.executability.Executable;
import plaidio.filesystem.path.valid.existency.existent.expermission.executability.NonExecutable;

/*------------------------------------------------------------------------------
/**
	CID:	TS-1121111
	DESC:	"ExecutabilityDimension" typestate which is one dimension of ExPermission typestate.
**/
state ExecutabilityDimension
{
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-11211111
		DESC:	Checks all dimensions of the object.
	**/
	method void initializeExecutabilityDimension() /*[shared ExecutabilityDimension >> shared ExecutabilityDimension this]*/
	{
		checkExecutability();
	}
	//method void initializeExecutabilityDimension() /*[shared ExecutabilityDimension >> shared ExecutabilityDimension this]*/

	//-----------------------------------------------------------------------------
	/**
		CID:	ST-11211112
		DESC:	Checks whether the path is executable or not, and
				changes the state of "this" into either "Executable" or "NonExecutable".				
	**/
	method void checkExecutability() /*[shared ExecutabilityDimension >> shared ExecutabilityDimension this]*/
	{
		ifElse (j_File.canExecute())
		{
			this <- Executable;
			initializeExecutable();
		}
		/*else*/
		{
			this <- NonExecutable;
			initializeNonExecutable();
		}
	}
	//method void checkExecutability() /*[shared ExecutabilityDimension >> shared ExecutabilityDimension this]*/
}
