/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SR-11212111
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	"Creatability" subtypes of "CreatabilityDimension" typestate.
	FILE:	Creatable.plaid
**/
package plaidio.filesystem.path.valid.existency.nonexistent.nxpermission.creatability;

import plaidio.filesystem.path.valid.existency.nonexistent.nxpermission.CreatabilityDimension;
import plaidio.statecheckers.isCreatable;

/*------------------------------------------------------------------------------
/**
	CID:	TS-11212111
	DESC:	"Creatable" typestate which represent a creatable permission state.
**/
state Creatable case of CreatabilityDimension
{
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-112121111
		DESC:	Checks all dimensions of the object.
	**/
	method void stabilizeCreatable() /*[shared Creatable >> shared Creatable this]*/
	{
	}
	//method void stabilizeCreatable() /*[shared Creatable >> shared Creatable this]*/

	//-----------------------------------------------------------------------------
	/**
		CID:	ST-112121112
		DESC:	Atomically creates a new, empty file named by this abstract pathname
				if and only if a file with this name does not yet exist.
	**/
	method void createAsFile() /*[unique Creatable >> unique Valid this]*/
	{
		stabilizePath();
		if (isCreatable(this)) { j_File.createNewFile(); };
		stabilizePath();
	}
	//method void createAsFile() /*[unique Creatable >> unique Valid this]*/
}