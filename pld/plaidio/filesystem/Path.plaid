/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SS-1
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	Basic statespace for SR-11 features
	FILE:	Path.plaid
**/
package plaidio.filesystem;

import plaidio.filesystem.path.Valid;
import plaidio.filesystem.path.Invalid;

/*------------------------------------------------------------------------------
/**
	CID:	TS-1.1
	DESC:	Basic typestate for SR-11 features
**/
state Path
{
	/*private*/ val /*java.io.File*/ file;
	
	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-1.1.1
		DESC:	Returns the name of the file or directory denoted by this abstract pathname.
	**/
	/*public*/ method immutable String getName()
	{
		/*return*/ file.getName();
	} // method immutable String getName()

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-1.1.2
		DESC:	Converts this abstract pathname into a pathname string.
	**/
	/*public*/ method immutable String getPath()
	{
		/*return*/ file.getPath();
	} // method immutable String getPath()
	
	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-1.1.3
		DESC:	Returns the pathname string of this abstract pathname.
	**/
	/*public*/ method immutable String toString()
	{
		/*return*/ file.toString();
	} // method immutable String toString()

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-1.1.4
		DESC:	Checks whether the path is valid or not, and
				changes the state of "this" into either "Valid" or "Invalid".				
	**/
	/*public*/ method /*void*/ validate() /*[unique Path >> unique Valid | unique Invalid this]*/
	{
		/*
		try
		{
			file.getCanonicalPath();
			this <- Valid;
		}
		catch (exception e)
		{
			this <- Invalid;
		}
		*/
		// This method should try to check validity by using either regex or exception handling.
		// Since Plaid has no try & catch feature (not yet), it has to be done by using Java code.
		ifElse (com.akefirad.auxiliary.Helper.isValidPath(file))
		{
			this <- Valid;
		}
		//else
		{
			this <- Invalid;
		}
	} // method /*void*/ validate()
}