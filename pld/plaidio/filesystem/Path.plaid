/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

//------------------------------------------------------------------------------
/**
	CID:	SS-1
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	"plaidio.filesystem" is the basic statespace for SR-11 features
	FILE:	Path.plaid
**/
package plaidio.filesystem;

import plaidio.filesystem.path.Valid;
import plaidio.filesystem.path.Invalid;
import com.akefirad.plaid.testing.trycatch;

//------------------------------------------------------------------------------
/**
	CID:	TS-11
	DESC:	Basic typestate for SR-11 features
**/
state Path
{
	val /*unique java.io.File*/ j_File;
	
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-111
		DESC:	Checks all dimensions of the object.				
	**/
	method void stabilizePath() /*[shared Path >> shared Path this]*/
	{
		checkValidity();
	}
	//method void stabilizePath() /*[shared Path >> shared Path this]*/

	//-----------------------------------------------------------------------------
	/**
		CID:	ST-112
		DESC:	Checks whether the path is valid or not, and
				changes the state of "this" into either "Valid" or "Invalid".				
	**/
	method void checkValidity() /*[shared Path >> shared Path this]*/
	{
		printLine("START checkValidity");
		plaidio.statecheckers.match_state(this);
		// This method should try to check validity by using either regex or exception handling.
		// Since Plaid has no try & catch feature (not yet), it has to be done by using Java code.
		trycatch(
		{
			j_File.getCanonicalPath();
			this <- Valid;
			stabilizeValid();
		},
		/*catch*/
		{
			this <- Invalid;
			stabilizeInvalid();
		}, "");
	}
	//method void checkValidity() /*[shared Path >> shared Path this]*/
	
	//-----------------------------------------------------------------------------
	/**
		CID:	ST-113
		DESC:	
	**/
	method immutable String toString() /*[shared Path >> shared Path this]*/
	{
		j_File.toString();
	}
	//method void stabilizePath() /*[shared Path >> shared Path this]*/
}