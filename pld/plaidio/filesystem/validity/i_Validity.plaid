/**
 * Copyright (c) 2013 The Plaid Group (see AUTHORS file)
 * 
 * This file is part of Plaid Programming Language.
 *
 * Plaid Programming Language is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Plaid Programming Language is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language.  If not, see <http://www.gnu.org/licenses/>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SR-14
	AUTHOR: Rad Akefirad akefirad@gmail.com
	FILE:	i_Validity.plaid
**/
package plaidio.filesystem.validity;

import plaidio.filesystem.Path;
import com.akefirad.plaid.lang.trycatch;

/*------------------------------------------------------------------------------
/**
	CID:	TS-15
	DESC:	"i_Validity" typestate which is created to initialize validity state region.
			This state should not be public.
**/
state i_Validity case of Path
{
	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-15.1
		DESC:	Checks whether the path is valid or not, and within Path,
				changes the state of "this" into either "Invalid" or "Valid".
	**/
	method void p_Finalize() /*[shared i_Validity >> shared Path this]*/
	{
		// This method should try to check validity by using either regex or exception handling.
		// Since Plaid has no try & catch feature (not yet), it has to be done by using Java code.
		trycatch(
		{
			j_File.getCanonicalPath();
			p_MakeValid();
		},
		/*catch*/
		{
			p_MakeInvalid();
		}, "");
	}
	//method void p_Finalize() /*[shared i_Validity >> shared Path this]*/

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-15.2
		DESC:	Makes the object Invalid.
	**/
	method void p_MakeInvalid() /*[shared i_Validity >> shared Invalid this]*/
	{
		this <- Invalid;
		p_InitInvalid();
	}
	//method void p_MakeInvalid() /*[shared i_Validity >> shared Invalid this]*/

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-15.3
		DESC:	Makes the object Valid.
	**/
	method void p_MakeValid() /*[shared i_Validity >> shared Valid this]*/
	{
		this <- Valid;
		p_InitValid();
	}
	//method void p_MakeValid() /*[shared i_Validity >> shared Valid this]*/
}