package plaidio.filesystem.validity.valid.relativity.statecheckers;

import plaidio.filesystem.validity.valid.relativity.Absolute;
import plaidio.filesystem.validity.valid.relativity.Canonical;
import plaidio.filesystem.validity.valid.relativity.Relative;

method immutable Boolean isAbsolute(object) { match (object) { case Absolute { true; } default { false; } }; }
method immutable Boolean isCanonical(object) { match (object) { case Canonical { true; } default { false; } }; }
method immutable Boolean isRelative(object) { match (object) { case Relative { true; } default { false; } }; }

method immutable Boolean debugIsAbsolute(object, immutable Boolean verbose) { ifElse (isAbsolute(object)) { if (verbose) { printLine("The object is Absolute"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT Absolute"); }; false; }; }
method immutable Boolean debugIsCanonical(object, immutable Boolean verbose) { ifElse (isCanonical(object)) { if (verbose) { printLine("The object is Canonical"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT Canonical"); }; false; }; }
method immutable Boolean debugIsRelative(object, immutable Boolean verbose) { ifElse (isRelative(object)) { if (verbose) { printLine("The object is Relative"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT Relative"); }; false; }; }
