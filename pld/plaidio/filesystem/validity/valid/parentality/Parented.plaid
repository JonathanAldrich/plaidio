/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SR-99
	AUTHOR: Rad Akefirad akefirad@gmail.com
	FILE:	Parented.plaid
**/
package plaidio.filesystem.validity.valid.parentality;

import plaidio.filesystem.makePath;
import plaidio.filesystem.validity.Valid;
import plaidio.filesystem.validity.valid.D_Parentality;

/*------------------------------------------------------------------------------
/**
	CID:	TS-113
	DESC:	"Parented" typestate which is a sub-typestate of D_Parentality state.
**/
state Parented case of D_Parentality
{
	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-113.1
		DESC:	Checks all dimensions of the object.
	**/
	method void p_InitParented() /*[shared Parented >> shared Parented this]*/
	{
	}
	//method void p_InitParented() /*[shared Parented >> shared Parented this]*/

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-113.2
		DESC:	 Returns the pathname string of this abstract pathname's parent.
	**/
	method immutable String getParentString() /*[pure Parented >> pure Parented this]*/
	{
		/*return*/ j_File.getParent();
	}
	//method immutable String getParentString() /*[pure Parented >> pure Parented this]*/

	/*-----------------------------------------------------------------------------
	/**
		CID:	ST-113.3
		DESC:	Returns the abstract pathname of this abstract pathname's parent.
	**/
	method unique Valid getParent() /*[pure Parented >> pure Parented this]*/
	{
		/*return*/ makePath(getParentString());
	}
	//method unique Valid getParent() /*[pure Parented >> pure Parented this]*/
}