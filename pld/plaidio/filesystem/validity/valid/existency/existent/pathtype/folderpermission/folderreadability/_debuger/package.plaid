package plaidio.filesystem.validity.valid.existency.existent.pathtype.folderpermission.folderreadability._debuger;

import plaidio.filesystem.validity.valid.existency.existent.pathtype.folderpermission.folderreadability.NonReadableFolder;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.folderpermission.folderreadability.ReadableFolder;

method immutable Boolean isNonReadableFolder(object) { match (object) { case NonReadableFolder { true; } default { false; } }; }
method immutable Boolean isReadableFolder(object) { match (object) { case ReadableFolder { true; } default { false; } }; }

method immutable Boolean debugIsNonReadableFolder(object, immutable Boolean verbose) { ifElse (isNonReadableFolder(object)) { if (verbose) { printLine("The object is NonReadableFolder"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT NonReadableFolder"); }; false; }; }
method immutable Boolean debugIsReadableFolder(object, immutable Boolean verbose) { ifElse (isReadableFolder(object)) { if (verbose) { printLine("The object is ReadableFolder"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT ReadableFolder"); }; false; }; }
