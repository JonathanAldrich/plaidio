package plaidio.filesystem.validity.valid.existency.existent.pathtype.folderpermission.folderwritability._debuger;

import plaidio.filesystem.validity.valid.existency.existent.pathtype.folderpermission.folderwritability.NonWritableFolder;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.folderpermission.folderwritability.WritableFolder;

method immutable Boolean isNonWritableFolder(object) { match (object) { case NonWritableFolder { true; } default { false; } }; }
method immutable Boolean isWritableFolder(object) { match (object) { case WritableFolder { true; } default { false; } }; }

method immutable Boolean debugIsNonWritableFolder(object, immutable Boolean verbose) { ifElse (isNonWritableFolder(object)) { if (verbose) { printLine("The object is NonWritableFolder"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT NonWritableFolder"); }; false; }; }
method immutable Boolean debugIsWritableFolder(object, immutable Boolean verbose) { ifElse (isWritableFolder(object)) { if (verbose) { printLine("The object is WritableFolder"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT WritableFolder"); }; false; }; }
