package plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission._debuger;

import plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission.D_FileExecutability;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission.D_FileReadability;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission.D_FileWritability;

method immutable Boolean isD_FileExecutability(object) { match (object) { case D_FileExecutability { true; } default { false; } }; }
method immutable Boolean isD_FileReadability(object) { match (object) { case D_FileReadability { true; } default { false; } }; }
method immutable Boolean isD_FileWritability(object) { match (object) { case D_FileWritability { true; } default { false; } }; }

method immutable Boolean debugIsD_FileExecutability(object, immutable Boolean verbose) { ifElse (isD_FileExecutability(object)) { if (verbose) { printLine("The object is D_FileExecutability"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT D_FileExecutability"); }; false; }; }
method immutable Boolean debugIsD_FileReadability(object, immutable Boolean verbose) { ifElse (isD_FileReadability(object)) { if (verbose) { printLine("The object is D_FileReadability"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT D_FileReadability"); }; false; }; }
method immutable Boolean debugIsD_FileWritability(object, immutable Boolean verbose) { ifElse (isD_FileWritability(object)) { if (verbose) { printLine("The object is D_FileWritability"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT D_FileWritability"); }; false; }; }
