package plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission._debuger;

import plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission.D_UnknownExecutability;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission.D_UnknownReadability;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission.D_UnknownWritability;

method immutable Boolean isD_UnknownExecutability(object) { match (object) { case D_UnknownExecutability { true; } default { false; } }; }
method immutable Boolean isD_UnknownReadability(object) { match (object) { case D_UnknownReadability { true; } default { false; } }; }
method immutable Boolean isD_UnknownWritability(object) { match (object) { case D_UnknownWritability { true; } default { false; } }; }

method immutable Boolean debugIsD_UnknownExecutability(object, immutable Boolean verbose) { ifElse (isD_UnknownExecutability(object)) { if (verbose) { printLine("The object is D_UnknownExecutability"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT D_UnknownExecutability"); }; false; }; }
method immutable Boolean debugIsD_UnknownReadability(object, immutable Boolean verbose) { ifElse (isD_UnknownReadability(object)) { if (verbose) { printLine("The object is D_UnknownReadability"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT D_UnknownReadability"); }; false; }; }
method immutable Boolean debugIsD_UnknownWritability(object, immutable Boolean verbose) { ifElse (isD_UnknownWritability(object)) { if (verbose) { printLine("The object is D_UnknownWritability"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT D_UnknownWritability"); }; false; }; }
