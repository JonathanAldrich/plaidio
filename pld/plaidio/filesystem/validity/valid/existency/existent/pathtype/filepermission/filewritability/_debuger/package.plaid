package plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission.filewritability._debuger;

import plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission.filewritability.NonWritableFile;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.filepermission.filewritability.WritableFile;

method immutable Boolean isNonWritableFile(object) { match (object) { case NonWritableFile { true; } default { false; } }; }
method immutable Boolean isWritableFile(object) { match (object) { case WritableFile { true; } default { false; } }; }

method immutable Boolean debugIsNonWritableFile(object, immutable Boolean verbose) { ifElse (isNonWritableFile(object)) { if (verbose) { printLine("The object is NonWritableFile"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT NonWritableFile"); }; false; }; }
method immutable Boolean debugIsWritableFile(object, immutable Boolean verbose) { ifElse (isWritableFile(object)) { if (verbose) { printLine("The object is WritableFile"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT WritableFile"); }; false; }; }
