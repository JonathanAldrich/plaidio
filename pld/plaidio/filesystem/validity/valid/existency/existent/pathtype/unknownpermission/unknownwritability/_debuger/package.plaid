package plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission.unknownwritability._debuger;

import plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission.unknownwritability.NonWritableUnknown;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.unknownpermission.unknownwritability.WritableUnknown;

method immutable Boolean isNonWritableUnknown(object) { match (object) { case NonWritableUnknown { true; } default { false; } }; }
method immutable Boolean isWritableUnknown(object) { match (object) { case WritableUnknown { true; } default { false; } }; }

method immutable Boolean debugIsNonWritableUnknown(object, immutable Boolean verbose) { ifElse (isNonWritableUnknown(object)) { if (verbose) { printLine("The object is NonWritableUnknown"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT NonWritableUnknown"); }; false; }; }
method immutable Boolean debugIsWritableUnknown(object, immutable Boolean verbose) { ifElse (isWritableUnknown(object)) { if (verbose) { printLine("The object is WritableUnknown"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT WritableUnknown"); }; false; }; }
