package plaidio.statecheckers;

import plaidio.streams.CloseableStream;
import plaidio.streams.ClosedStream;
import plaidio.streams.FlushableStream;
import plaidio.streams.OutputStream;
import plaidio.streams.InputStream;
import plaidio.streams.MarkabelStream;
import plaidio.streams.MarkedStream;

method immutable Boolean isCloseableStream(object) { match (object) { case CloseableStream { true; } default { false; } }; }
method immutable Boolean isClosedStream(object) { match (object) { case ClosedStream { true; } default { false; } }; }
method immutable Boolean isFlushableStream(object) { match (object) { case FlushableStream { true; } default { false; } }; }
method immutable Boolean isOutputStream(object) { match (object) { case OutputStream { true; } default { false; } }; }
method immutable Boolean isInputStream(object) { match (object) { case InputStream { true; } default { false; } }; }
method immutable Boolean isMarkabelStream(object) { match (object) { case MarkabelStream { true; } default { false; } }; }
method immutable Boolean isMarkedStream(object) { match (object) { case MarkedStream { true; } default { false; } }; }

method immutable Boolean debugIsCloseableStream(object, immutable Boolean verbose) { ifElse (isCloseableStream(object)) { if (verbose) { printLine("The object is CloseableStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT CloseableStream"); }; false; }; }
method immutable Boolean debugIsClosedStream(object, immutable Boolean verbose) { ifElse (isClosedStream(object)) { if (verbose) { printLine("The object is ClosedStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT ClosedStream"); }; false; }; }
method immutable Boolean debugIsFlushableStream(object, immutable Boolean verbose) { ifElse (isFlushableStream(object)) { if (verbose) { printLine("The object is FlushableStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT FlushableStream"); }; false; }; }
method immutable Boolean debugIsOutputStream(object, immutable Boolean verbose) { ifElse (isOutputStream(object)) { if (verbose) { printLine("The object is OutputStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT OutputStream"); }; false; }; }
method immutable Boolean debugIsInputStream(object, immutable Boolean verbose) { ifElse (isInputStream(object)) { if (verbose) { printLine("The object is InputStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT InputStream"); }; false; }; }
method immutable Boolean debugIsMarkabelStream(object, immutable Boolean verbose) { ifElse (isMarkabelStream(object)) { if (verbose) { printLine("The object is MarkabelStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT MarkableStream"); }; false; }; }
method immutable Boolean debugIsMarkedStream(object, immutable Boolean verbose) { ifElse (isMarkedStream(object)) { if (verbose) { printLine("The object is MarkedStream"); }; true; } /*else*/ { if (verbose) { printLine("The object is NOT MarkedStream"); }; false; }; }
