package plaidio.statecheckers;

import plaidio.filesystem.Path;
import plaidio.filesystem.validity.Invalid;
import plaidio.filesystem.validity.Valid;
import plaidio.filesystem.validity.valid.ExistencyDimension;
import plaidio.filesystem.validity.valid.RelativityDimension;
import plaidio.filesystem.validity.valid.existency.Existent;
import plaidio.filesystem.validity.valid.existency.NonExistent;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.File;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.Folder;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.Root;
import plaidio.filesystem.validity.valid.existency.existent.pathtype.Unknown;
import plaidio.filesystem.validity.valid.existency.nonexistent.creatability.Creatable;
import plaidio.filesystem.validity.valid.existency.nonexistent.creatability.NonCreatable;
import plaidio.filesystem.validity.valid.relativity.NonRelative;
import plaidio.filesystem.validity.valid.relativity.Relative;
import plaidio.filesystem.validity.valid.relativity.nonrelative.Absolute;
import plaidio.filesystem.validity.valid.relativity.nonrelative.Canonical;

method immutable Boolean isPath(v) { match (v) { case Path { true; } default { false; } }; }
method immutable Boolean isInvalid(v) { match (v) { case Invalid { true; } default { false; } }; }
method immutable Boolean isValid(v) { match (v) { case Valid { true; } default { false; } }; }
method immutable Boolean isExistencyDimension(v) { match (v) { case ExistencyDimension { true; } default { false; } }; }
method immutable Boolean isRelativityDimension(v) { match (v) { case RelativityDimension { true; } default { false; } }; }
method immutable Boolean isExistent(v) { match (v) { case Existent { true; } default { false; } }; }
method immutable Boolean isNonExistent(v) { match (v) { case NonExistent { true; } default { false; } }; }
method immutable Boolean isFile(v) { match (v) { case File { true; } default { false; } }; }
method immutable Boolean isFolder(v) { match (v) { case Folder { true; } default { false; } }; }
method immutable Boolean isRoot(v) { match (v) { case Root { true; } default { false; } }; }
method immutable Boolean isUnknown(v) { match (v) { case Unknown { true; } default { false; } }; }
method immutable Boolean isCreatable(v) { match (v) { case Creatable { true; } default { false; } }; }
method immutable Boolean isNonCreatable(v) { match (v) { case NonCreatable { true; } default { false; } }; }
method immutable Boolean isNonRelative(v) { match (v) { case NonRelative { true; } default { false; } }; }
method immutable Boolean isRelative(v) { match (v) { case Relative { true; } default { false; } }; }
method immutable Boolean isAbsolute(v) { match (v) { case Absolute { true; } default { false; } }; }
method immutable Boolean isCanonical(v) { match (v) { case Canonical { true; } default { false; } }; }
