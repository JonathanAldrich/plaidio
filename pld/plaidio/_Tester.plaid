/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SS-0
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	Main package of I/O API.
	FILE:	_Tester.plaid
**/
package plaidio;

import plaid.lang.testing.TestFactory;

//------------------------------------------------------------------------------
/**
	CID:	TS-SS-0
	DESC:	Tester of plaidio package
**/
immutable state _Tester case of TestFactory
{
	method unique List<unique Test> createTests() {
		val tests = makeEmptyList();
		val test = fn(name, body) => { tests.add(mktest(name, body)); };
		val identity = fn(x) => x;

		test("First Test Case", fn(ctx) => {
			printLine("This is first test case.");
			ctx.pass = true;
		});

		test("Second Test Case", fn(ctx) => {
			printLine("This is second test case.");
			ctx.pass = true;
		});

		test("Third Test Case", fn(ctx) => {
			printLine("This is third test case.");
			ctx.pass = true;
		});

		test("Forth Test Case", fn(ctx) => {
			printLine("This is forth test case.");
			ctx.pass = false;
		});

		tests
	}
}