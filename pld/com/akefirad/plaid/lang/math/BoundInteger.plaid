/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without ven the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	AUTHOR: Rad Akefirad akefirad@gmail.com
	FILE:	BoundInteger.plaid
**/
package com.akefirad.plaid.lang.math;

//------------------------------------------------------------------------------
/**
	CID:	TS-??
	DESC:	
**/
state BoundInteger
{
	var immutable Int32 p_Value;
	val immutable Int32 p_Lower;
	val immutable Int32 p_Upper;

	method void set(immutable Int32 value)
	{
		p_Value = value;
		ifElse (p_Value < p_Lower || p_Value >= p_Upper)
		{
			makeOutBoundInteger();
		}
		/*else*/
		{
			makeInBoundInteger();
		}
	}

	method immutable Int32 get()
	{
		/*return*/ p_Value;
	}

	method void makeInBoundInteger()
	{
		this <- InBoundInteger;
	}

	method void makeOutBoundInteger()
	{
		this <- OutBoundInteger;
	}
	
	method immutable String toString()
	{
		/*return*/ p_Value.toString();
	}
}