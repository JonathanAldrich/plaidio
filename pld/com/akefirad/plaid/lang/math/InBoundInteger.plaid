/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without ven the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	AUTHOR: Rad Akefirad akefirad@gmail.com
	FILE:	InBoundInteger.plaid
**/
package com.akefirad.plaid.lang.math;

//------------------------------------------------------------------------------
/**
	CID:	TS-??
	DESC:	
**/
state InBoundInteger case of BoundInteger
{
	method void increaseOne()
	{
		increase(1);
	}

	method void increase(immutable Int32 steps)
	{
		set(p_Value + steps);
	}

	method void decreaseOne()
	{
		decrease(1);
	}

	method void decrease(immutable Int32 steps)
	{
		set(p_Value - steps);
	}

	method immutable Int32 countRemainingSteps()
	{
		/*return*/ (p_Upper - p_Value);
	}

	method void setRemainingSteps(immutable Int32 steps)
	{
		setUpper(get() + steps);
	}
}