/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	
	AUTHOR: Rad Akefirad akefirad@gmail.com
	FILE:	Array.plaid
**/
package com.akefirad.plaid.lang.collections;

import com.akefirad.plaid.lang.math.BoundInteger;
import com.akefirad.plaid.lang.math.InBoundInteger;

immutable state Array
{
    val /*com.akefirad.plaid.JavaArray*/ j_Array;

    method immutable Int32 length()
    {
        /*return*/ j_Array.length();
    }
    
    method get(unique InBoundInteger index)
    {
        /*return*/ j_Array.get(index.get());
    }

    method getArray()
    {
        /*return*/ j_Array.getArray();
    }

    method void set(unique InBoundInteger index, item)
    {
        j_Array.set(index.get(), item);
    }

    method void setArray(javaarray)
    {
        j_Array = javaarray;
    }

	method unique InBoundInteger getIndexer()
	{
		val unique BoundInteger indexer = new BoundInteger { var p_Lower = 0; var p_Upper = length(); };
		indexer.set(0);
		/*return*/ indexer;
	}
}

