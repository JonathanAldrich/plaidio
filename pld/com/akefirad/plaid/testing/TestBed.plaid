/**
 *  Copyright (c) 2012 The PLAIDIO project
 * 
 *  This file is part of PLAIDIO, I/O Library for Plaid Language.
 *
 *  This library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Plaid Programming Language. If not, see <www.gnu.org/licenses>.
 */

/*------------------------------------------------------------------------------
/**
	CID:	SS-9
	AUTHOR: Rad Akefirad akefirad@gmail.com
	DESC:	Testing package of plaid programming language.
	FILE:	TestBed.plaid
**/
package com.akefirad.plaid.testing;

import com.akefirad.plaid.lang.statecheckers.isNil;

//------------------------------------------------------------------------------
/**
	CID:	TS-92
	DESC:	Test bed for plaid programs' test cases (created based on TestFactory)
**/
immutable state TestBed
{
	val immutable String p_Name;
	val unique List<immutable TestCase> p_TestCases;
	
	method void makeTestCase(immutable String name, body)
	{
		addTestCase(new TestCase { p_Name = name; p_Body = body; });
	}

	method void addTestCase(immutable TestCase testcase)
	{
		p_TestCases.add(testcase);
	}

	method void runTestCases(immutable Boolean verbose)
	{
		if (verbose) { printLine(p_Name); };
		ifElse (p_TestCases.isEmpty())
		{
			if (verbose) { printLine("There is no test case to run!"); };
		}
		//else
		{
			var i = 0;
			var testcase = new Unit;
			while
			{
				testcase = p_TestCases.get(i);
				isNil(testcase) == false;
			}
			//do
			{
				testcase.run(verbose);
				i = i + 1;
			};
		}
	}
}